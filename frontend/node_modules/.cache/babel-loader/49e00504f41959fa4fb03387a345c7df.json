{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst GET_NOTES = 'notes/GET_NOTES';\nconst ADD_NOTEBOOK = 'notebooks/ADD_NOTEBOOK';\n\nconst loadNotes = notes => ({\n  type: GET_NOTES,\n  notes\n});\n\nconst addNotebook = notebook => {\n  return {\n    type: ADD_NOTEBOOK,\n    notebook\n  };\n}; // thunk action creator for getting all notes\n\n\nexport const getAllNotes = () => async dispatch => {\n  const response = await csrfFetch('api/notes');\n\n  if (response.ok) {\n    const notes = await response.json();\n    dispatch(loadNotes(notes));\n  }\n}; // thunk action creator for creating a notebook\n\nexport const createNotebook = data => async dispatch => {\n  const response = await csrfFetch('api/notebooks', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  const notebook = await response.json();\n  dispatch(addNotebook(notebook));\n  return notebook;\n};\nconst initialState = {};\n\nconst noteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_NOTES:\n      const allNotes = {};\n      action.notes.forEach(note => {\n        allNotes[note.id] = note;\n      });\n      return { ...allNotes\n      };\n\n    case ADD_NOTEBOOK:\n      if (!state[action.notebook.id]) {\n        const newState = { ...state,\n          [action.notebook.id]: action.notebook\n        };\n        return newState;\n      }\n\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default noteReducer;","map":{"version":3,"names":["csrfFetch","GET_NOTES","ADD_NOTEBOOK","loadNotes","notes","type","addNotebook","notebook","getAllNotes","dispatch","response","ok","json","createNotebook","data","method","headers","body","JSON","stringify","initialState","noteReducer","state","action","allNotes","forEach","note","id","newState"],"sources":["/Users/weiqi/Mod 5/solo-project/frontend/src/store/notes.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\nconst GET_NOTES = 'notes/GET_NOTES'\nconst ADD_NOTEBOOK = 'notebooks/ADD_NOTEBOOK'\n\nconst loadNotes = notes => ({\n  type: GET_NOTES,\n  notes\n})\n\nconst addNotebook = (notebook) => {\n  return {\n    type: ADD_NOTEBOOK,\n    notebook\n  }\n}\n\n// thunk action creator for getting all notes\nexport const getAllNotes = () => async dispatch => {\n  const response = await csrfFetch('api/notes')\n\n  if (response.ok) {\n    const notes = await response.json();\n    dispatch(loadNotes(notes))\n  }\n}\n\n// thunk action creator for creating a notebook\nexport const createNotebook = (data) => async dispatch => {\n  const response = await csrfFetch('api/notebooks', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  })\n  const notebook = await response.json();\n\n  dispatch(addNotebook(notebook))\n\n  return notebook\n}\n\nconst initialState = {}\n\nconst noteReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_NOTES:\n      const allNotes = {};\n      action.notes.forEach(note => {\n        allNotes[note.id] = note\n      })\n      return {\n        ...allNotes\n      }\n    case ADD_NOTEBOOK:\n      if (!state[action.notebook.id]) {\n        const newState = {\n          ...state,\n          [action.notebook.id]: action.notebook\n        }\n        return newState\n      }\n\n      break\n    default:\n      return state;\n  }\n}\n\nexport default noteReducer\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,MAAMC,SAAS,GAAG,iBAAlB;AACA,MAAMC,YAAY,GAAG,wBAArB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,KAAK;EAC1BC,IAAI,EAAEJ,SADoB;EAE1BG;AAF0B,CAAL,CAAvB;;AAKA,MAAME,WAAW,GAAIC,QAAD,IAAc;EAChC,OAAO;IACLF,IAAI,EAAEH,YADD;IAELK;EAFK,CAAP;AAID,CALD,C,CAOA;;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAkB;EACjD,MAAMC,QAAQ,GAAG,MAAMV,SAAS,CAAC,WAAD,CAAhC;;EAEA,IAAIU,QAAQ,CAACC,EAAb,EAAiB;IACf,MAAMP,KAAK,GAAG,MAAMM,QAAQ,CAACE,IAAT,EAApB;IACAH,QAAQ,CAACN,SAAS,CAACC,KAAD,CAAV,CAAR;EACD;AACF,CAPM,C,CASP;;AACA,OAAO,MAAMS,cAAc,GAAIC,IAAD,IAAU,MAAML,QAAN,IAAkB;EACxD,MAAMC,QAAQ,GAAG,MAAMV,SAAS,CAAC,eAAD,EAAkB;IAChDe,MAAM,EAAE,MADwC;IAEhDC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFuC;IAKhDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;EAL0C,CAAlB,CAAhC;EAOA,MAAMP,QAAQ,GAAG,MAAMG,QAAQ,CAACE,IAAT,EAAvB;EAEAH,QAAQ,CAACH,WAAW,CAACC,QAAD,CAAZ,CAAR;EAEA,OAAOA,QAAP;AACD,CAbM;AAeP,MAAMa,YAAY,GAAG,EAArB;;AAEA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBF,YAAyB;EAAA,IAAXG,MAAW;;EACpD,QAAQA,MAAM,CAAClB,IAAf;IACE,KAAKJ,SAAL;MACE,MAAMuB,QAAQ,GAAG,EAAjB;MACAD,MAAM,CAACnB,KAAP,CAAaqB,OAAb,CAAqBC,IAAI,IAAI;QAC3BF,QAAQ,CAACE,IAAI,CAACC,EAAN,CAAR,GAAoBD,IAApB;MACD,CAFD;MAGA,OAAO,EACL,GAAGF;MADE,CAAP;;IAGF,KAAKtB,YAAL;MACE,IAAI,CAACoB,KAAK,CAACC,MAAM,CAAChB,QAAP,CAAgBoB,EAAjB,CAAV,EAAgC;QAC9B,MAAMC,QAAQ,GAAG,EACf,GAAGN,KADY;UAEf,CAACC,MAAM,CAAChB,QAAP,CAAgBoB,EAAjB,GAAsBJ,MAAM,CAAChB;QAFd,CAAjB;QAIA,OAAOqB,QAAP;MACD;;MAED;;IACF;MACE,OAAON,KAAP;EApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}