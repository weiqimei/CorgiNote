{"ast":null,"code":"var _jsxFileName = \"/Users/weiqi/Mod 5/solo-project/frontend/src/components/CreateNoteForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { getAllNotes, createNote } from '../../store/notes';\nimport './CreateNoteForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateNoteForm = _ref => {\n  _s();\n\n  let {\n    hideForm\n  } = _ref;\n  const currentUserId = useSelector(state => state.session.user.id);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [userId, setUserId] = useState(currentUserId);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  const updateTitle = e => setTitle(e.target.value);\n\n  const updateContent = e => setContent(e.target.value);\n\n  useEffect(() => {\n    dispatch(getAllNotes());\n  }, [dispatch]);\n\n  const reset = () => {\n    setTitle(\"\");\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      userId,\n      title\n    };\n    let createdNote;\n    createdNote = await dispatch(createNote(payload));\n\n    if (createdNote) {\n      history.push('/notes');\n      reset();\n    }\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n    history.push('/notes');\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-note-text\",\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        required: true,\n        value: title,\n        onChange: updateTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Content\",\n        required: true,\n        value: content,\n        onChange: updateTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-button\",\n        type: \"submit\",\n        children: \"Post New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCancelClick,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateNoteForm, \"PmYoW1rhHF2vZY/eSMh6qr1eN1I=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = CreateNoteForm;\nexport default CreateNoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNoteForm\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","useHistory","getAllNotes","createNote","CreateNoteForm","hideForm","currentUserId","state","session","user","id","dispatch","history","userId","setUserId","title","setTitle","content","setContent","updateTitle","e","target","value","updateContent","reset","handleSubmit","preventDefault","payload","createdNote","push","handleCancelClick"],"sources":["/Users/weiqi/Mod 5/solo-project/frontend/src/components/CreateNoteForm/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { getAllNotes, createNote } from '../../store/notes';\nimport './CreateNoteForm.css'\n\nconst CreateNoteForm = ({ hideForm }) => {\n  const currentUserId = useSelector((state) => state.session.user.id)\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [userId, setUserId] = useState(currentUserId)\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n\n  const updateTitle = (e) => setTitle(e.target.value);\n  const updateContent = (e) => setContent(e.target.value);\n\n\n  useEffect(() => {\n    dispatch(getAllNotes());\n  }, [dispatch]);\n\n  const reset = () => {\n    setTitle(\"\");\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const payload = {\n      userId,\n      title\n    };\n\n    let createdNote;\n    createdNote = await dispatch(createNote(payload))\n    if (createdNote) {\n      history.push('/notes');\n      reset()\n    }\n  };\n\n  const handleCancelClick = (e) => {\n    e.preventDefault();\n    history.push('/notes');\n    reset()\n  };\n\n  return (\n    <section className='form'>\n      <div className='add-note-text'>Add Note</div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          required\n          value={title}\n          onChange={updateTitle} />\n        <input\n          type=\"text\"\n          placeholder=\"Content\"\n          required\n          value={content}\n          onChange={updateTitle} />\n        <button className='post-button' type=\"submit\">Post New Note</button>\n        <button type=\"button\" onClick={handleCancelClick}>Cancel</button>\n      </form>\n    </section>\n  );\n}\n\n\nexport default CreateNoteForm;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,mBAAxC;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACvC,MAAMC,aAAa,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAA/B,CAAjC;EACA,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAMa,OAAO,GAAGX,UAAU,EAA1B;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAACQ,aAAD,CAApC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;;EAGA,MAAMqB,WAAW,GAAIC,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;;EACA,MAAMC,aAAa,GAAIH,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvC;;EAGAzB,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACT,WAAW,EAAZ,CAAR;EACD,CAFQ,EAEN,CAACS,QAAD,CAFM,CAAT;;EAIA,MAAMa,KAAK,GAAG,MAAM;IAClBR,QAAQ,CAAC,EAAD,CAAR;EACD,CAFD;;EAIA,MAAMS,YAAY,GAAG,MAAOL,CAAP,IAAa;IAChCA,CAAC,CAACM,cAAF;IAEA,MAAMC,OAAO,GAAG;MACdd,MADc;MAEdE;IAFc,CAAhB;IAKA,IAAIa,WAAJ;IACAA,WAAW,GAAG,MAAMjB,QAAQ,CAACR,UAAU,CAACwB,OAAD,CAAX,CAA5B;;IACA,IAAIC,WAAJ,EAAiB;MACfhB,OAAO,CAACiB,IAAR,CAAa,QAAb;MACAL,KAAK;IACN;EACF,CAdD;;EAgBA,MAAMM,iBAAiB,GAAIV,CAAD,IAAO;IAC/BA,CAAC,CAACM,cAAF;IACAd,OAAO,CAACiB,IAAR,CAAa,QAAb;IACAL,KAAK;EACN,CAJD;;EAMA,oBACE;IAAS,SAAS,EAAC,MAAnB;IAAA,wBACE;MAAK,SAAS,EAAC,eAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAEC,YAAhB;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,OAFd;QAGE,QAAQ,MAHV;QAIE,KAAK,EAAEV,KAJT;QAKE,QAAQ,EAAEI;MALZ;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,SAFd;QAGE,QAAQ,MAHV;QAIE,KAAK,EAAEF,OAJT;QAKE,QAAQ,EAAEE;MALZ;QAAA;QAAA;QAAA;MAAA,QAPF,eAaE;QAAQ,SAAS,EAAC,aAAlB;QAAgC,IAAI,EAAC,QAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF,eAcE;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEW,iBAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAhED;;GAAM1B,c;UACkBJ,W,EACLD,W,EACDE,U;;;KAHZG,c;AAmEN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}